-- 판매자들을 위한 대시보드 구성 
-- 세부 분석 및 예측 정보

SELECT * FROM ORDER_PRODUCT_ITEMS_CUS;


SELECT 
    P_PRODUCT_ID,
    COUNT(DISTINCT SELLER_ID) AS NUM_SELLERS
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY P_PRODUCT_ID
ORDER BY NUM_SELLERS DESC, P_PRODUCT_ID;
-- 판매자별 카테고리별 매출 : 이 부분은 TABLEAU에서 바로 처리할 것

-- 판매자별 고객의 지역 수 확인. 현재 어느 시장을 타겟으로 물건을 판매하는지도 알 수 있음

SELECT 
    SELLER_ID,
    COUNT(DISTINCT CUSTOMER_STATE) AS STATE_COUNT
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY SELLER_ID
ORDER BY STATE_COUNT DESC;

-- 프로덕트 ID가 같으면 가격은 다 동일한지 알아보기 : 서로 다른 가격의 제품들 확인

SELECT 
    P_PRODUCT_ID,
    COUNT(DISTINCT PRICE) AS DISTINCT_PRICE_COUNT
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY P_PRODUCT_ID
HAVING COUNT(DISTINCT PRICE) > 1;

-- 프로덕트 ID가 같아도 가격이 다른 경우가 많다는 것을 확인함 : 같은 제품이 얼마에 몇 개나 팔렸는지 알아보기

SELECT 
    P_PRODUCT_ID,
    PRICE,
    COUNT(*) AS PRICE_OCCURRENCE
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY P_PRODUCT_ID, PRICE
ORDER BY P_PRODUCT_ID, PRICE;

-- 책정된 가격 모두 확인

WITH MULTIPLE_PRICES AS (
    SELECT 
        P_PRODUCT_ID
    FROM ORDER_PRODUCT_ITEMS_CUS
    GROUP BY P_PRODUCT_ID
    HAVING COUNT(DISTINCT PRICE) >= 1
)
SELECT 
    O.SELLER_ID,
	O.P_PRODUCT_ID,
    O.PRICE
FROM ORDER_PRODUCT_ITEMS_CUS O
JOIN MULTIPLE_PRICES P ON O.P_PRODUCT_ID = P.P_PRODUCT_ID
ORDER BY O.P_PRODUCT_ID, O.PRICE;

-- 가격이 두 개 이상 형성된 제품들을 찾고 그 서브쿼리 결과를 이용하여 해당 제품들의 가격 내역을 가져옴

CREATE VIEW MULTIPLE_PRICE AS
WITH MULTIPLE_PRICES AS (
    SELECT 
        P_PRODUCT_ID
    FROM ORDER_PRODUCT_ITEMS_CUS
    GROUP BY P_PRODUCT_ID
    HAVING COUNT(DISTINCT PRICE) > 1
)
SELECT 
    O.SELLER_ID,
	O.P_PRODUCT_ID,
    O.PRICE
FROM ORDER_PRODUCT_ITEMS_CUS O
JOIN MULTIPLE_PRICES P ON O.P_PRODUCT_ID = P.P_PRODUCT_ID
ORDER BY O.P_PRODUCT_ID, O.PRICE;

-- 뷰 확인

SELECT * FROM MULTIPLE_PRICE ORDER BY P_PRODUCT_ID;

-- 주문 날짜 추가

CREATE OR REPLACE VIEW MULTIPLE_PRICE AS
WITH MULTIPLE_PRICES AS (
    SELECT 
        P_PRODUCT_ID
    FROM ORDER_PRODUCT_ITEMS_CUS
    GROUP BY P_PRODUCT_ID
    HAVING COUNT(DISTINCT PRICE) > 1
)
SELECT 
    O.SELLER_ID,
    O.P_PRODUCT_ID,
    O.PRICE,
    O.ORDER_PURCHASE_TIMESTAMP
FROM ORDER_PRODUCT_ITEMS_CUS O
JOIN MULTIPLE_PRICES P ON O.P_PRODUCT_ID = P.P_PRODUCT_ID
ORDER BY O.P_PRODUCT_ID, O.PRICE;

SELECT * FROM MULTIPLE_PRICE;

-- 특정 가격에 몇 건이나 팔렸는지

SELECT 
    P_PRODUCT_ID,
    SELLER_ID,
    PRICE,
    COUNT(*) AS PRICE_OCCURRENCE
FROM MULTIPLE_PRICE
GROUP BY P_PRODUCT_ID, SELLER_ID, PRICE
ORDER BY P_PRODUCT_ID, SELLER_ID, PRICE;

-- 품목별로 가격 구간(최소, 최대)을 확인

SELECT 
    PRODUCT_CATEGORY_NAME,
    MIN(PRICE) AS MIN_PRICE,
    MAX(PRICE) AS MAX_PRICE
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY PRODUCT_CATEGORY_NAME
ORDER BY PRODUCT_CATEGORY_NAME;

-- 동일한 상품을 판매하는 판매자의 수

SELECT 
	P_PRODUCT_ID, 
	COUNT(DISTINCT SELLER_ID) AS SELLER_COUNT
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY P_PRODUCT_ID
ORDER BY SELLER_COUNT DESC;

-- 동일한 상품을 판매하는 판매자 목록

SELECT 
    P_PRODUCT_ID, 
    STRING_AGG(DISTINCT SELLER_ID, ', ') AS SELLER_IDS
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY P_PRODUCT_ID
ORDER BY P_PRODUCT_ID;

-- 동일한 상품에 대해 여러 명의 판매자가 존재할 때

SELECT 
    P_PRODUCT_ID, 
    STRING_AGG(DISTINCT SELLER_ID, ', ') AS SELLER_IDS
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY P_PRODUCT_ID
HAVING COUNT(DISTINCT SELLER_ID) > 1
ORDER BY P_PRODUCT_ID;

-- 각 행으로 처리해서 확인

SELECT 
    product_category_name,
	P_PRODUCT_ID,
    SELLER_ID
FROM ORDER_PRODUCT_ITEMS_CUS
WHERE P_PRODUCT_ID IN (
    SELECT P_PRODUCT_ID
    FROM ORDER_PRODUCT_ITEMS_CUS
    GROUP BY P_PRODUCT_ID
    HAVING COUNT(DISTINCT SELLER_ID) > 1
)
ORDER BY P_PRODUCT_ID, SELLER_ID;

-- 동일한 품목을 판매하는 판매자의 수

SELECT PRODUCT_CATEGORY_NAME, COUNT(DISTINCT SELLER_ID) AS SELLER_COUNT
FROM ORDER_PRODUCT_ITEMS_CUS
GROUP BY PRODUCT_CATEGORY_NAME
ORDER BY SELLER_COUNT DESC;

